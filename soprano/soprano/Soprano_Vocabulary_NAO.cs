//Auto-generated by kalyptus. DO NOT EDIT.
namespace Soprano.Vocabulary.NAO {
    using Soprano;
    using System;
    using Qyoto;
    [SmokeClass("Soprano::Vocabulary::NAO")]
    public class Global {
        private static SmokeInvocation staticInterceptor = null;
        static Global() {
            staticInterceptor = new SmokeInvocation(typeof(Global), null);
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl NaoNamespace() {
            return (QUrl) staticInterceptor.Invoke("naoNamespace", "naoNamespace()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#Party 
        ///  Represents a single or a group of individuals 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Party() {
            return (QUrl) staticInterceptor.Invoke("Party", "Party()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#Symbol 
        ///  Represents a symbol 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Symbol() {
            return (QUrl) staticInterceptor.Invoke("Symbol", "Symbol()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#Tag 
        ///  Represents a generic tag 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Tag() {
            return (QUrl) staticInterceptor.Invoke("Tag", "Tag()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#altLabel 
        ///  An alternative label alongside the preferred label for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl AltLabel() {
            return (QUrl) staticInterceptor.Invoke("altLabel", "altLabel()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#altSymbol 
        ///  An alternative symbol representation for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl AltSymbol() {
            return (QUrl) staticInterceptor.Invoke("altSymbol", "altSymbol()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#annotation 
        ///  Generic annotation for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Annotation() {
            return (QUrl) staticInterceptor.Invoke("annotation", "annotation()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#contributor 
        ///  Refers to a single or a group of individuals that contributed 
        ///  to a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Contributor() {
            return (QUrl) staticInterceptor.Invoke("contributor", "contributor()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#created 
        ///  States the creation, or first modification time for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Created() {
            return (QUrl) staticInterceptor.Invoke("created", "created()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#creator 
        ///  Refers to the single or group of individuals that created the 
        ///  resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Creator() {
            return (QUrl) staticInterceptor.Invoke("creator", "creator()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#description 
        ///  A non-technical textual annotation for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Description() {
            return (QUrl) staticInterceptor.Invoke("description", "description()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#engineeringTool 
        ///  Specifies the engineering tool used to generate the graph 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl EngineeringTool() {
            return (QUrl) staticInterceptor.Invoke("engineeringTool", "engineeringTool()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespace 
        ///  Defines the default static namespace for a graph 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl HasDefaultNamespace() {
            return (QUrl) staticInterceptor.Invoke("hasDefaultNamespace", "hasDefaultNamespace()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespaceAbbreviation 
        ///  Defines the default static namespace abbreviation for a graph 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl HasDefaultNamespaceAbbreviation() {
            return (QUrl) staticInterceptor.Invoke("hasDefaultNamespaceAbbreviation", "hasDefaultNamespaceAbbreviation()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasSymbol 
        ///  Annotation for a resource in the form of a symbol representation 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl HasSymbol() {
            return (QUrl) staticInterceptor.Invoke("hasSymbol", "hasSymbol()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasTag 
        ///  Defines an existing tag for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl HasTag() {
            return (QUrl) staticInterceptor.Invoke("hasTag", "hasTag()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasTopic 
        ///  Defines a relationship between two resources, where the object 
        ///  is a topic of the subject 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl HasTopic() {
            return (QUrl) staticInterceptor.Invoke("hasTopic", "hasTopic()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#identifier 
        ///  Defines a generic identifier for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Identifier() {
            return (QUrl) staticInterceptor.Invoke("identifier", "identifier()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#isRelated 
        ///  Defines an annotation for a resource in the form of a relationship 
        ///  between the subject resource and another resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl IsRelated() {
            return (QUrl) staticInterceptor.Invoke("isRelated", "isRelated()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#isTagFor 
        ///  States which resources a tag is associated with 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl IsTagFor() {
            return (QUrl) staticInterceptor.Invoke("isTagFor", "isTagFor()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#isTopicOf 
        ///  Defines a relationship between two resources, where the subject 
        ///  is a topic of the object 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl IsTopicOf() {
            return (QUrl) staticInterceptor.Invoke("isTopicOf", "isTopicOf()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#lastModified 
        ///  States the last modification time for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl LastModified() {
            return (QUrl) staticInterceptor.Invoke("lastModified", "lastModified()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#modified 
        ///  States the modification time for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Modified() {
            return (QUrl) staticInterceptor.Invoke("modified", "modified()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#numericRating 
        ///  Annotation for a resource in the form of a numeric decimal rating 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl NumericRating() {
            return (QUrl) staticInterceptor.Invoke("numericRating", "numericRating()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#personalIdentifier 
        ///  Defines a personal string identifier for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl PersonalIdentifier() {
            return (QUrl) staticInterceptor.Invoke("personalIdentifier", "personalIdentifier()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#prefLabel 
        ///  A preferred label for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl PrefLabel() {
            return (QUrl) staticInterceptor.Invoke("prefLabel", "prefLabel()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#prefSymbol 
        ///  A unique preferred symbol representation for a resource 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl PrefSymbol() {
            return (QUrl) staticInterceptor.Invoke("prefSymbol", "prefSymbol()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#rating 
        ///  Annotation for a resource in the form of an unrestricted rating 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Rating() {
            return (QUrl) staticInterceptor.Invoke("rating", "rating()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#serializationLanguage 
        ///  States the serialization language for a named graph that is 
        ///  represented within a document 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl SerializationLanguage() {
            return (QUrl) staticInterceptor.Invoke("serializationLanguage", "serializationLanguage()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#status 
        ///  Specifies the status of a graph, stable, unstable or testing 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Status() {
            return (QUrl) staticInterceptor.Invoke("status", "status()", typeof(QUrl));
        }
        /// <remarks>
        ///  http://www.semanticdesktop.org/ontologies/2007/08/15/nao#version 
        ///  Specifies the version of a graph, in numeric format 
        ///              </remarks>        <short>    http://www.</short>
        public static QUrl Version() {
            return (QUrl) staticInterceptor.Invoke("version", "version()", typeof(QUrl));
        }
    }
}
