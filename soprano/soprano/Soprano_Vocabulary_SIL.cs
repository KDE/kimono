//Auto-generated by kalyptus. DO NOT EDIT.
namespace Soprano.Vocabulary.SIL {
    using Soprano;
    using System;
    using Qyoto;
    /// <remarks>
    ///  SIL, The Soprano Inference Language defines a set or URIs that
    ///  are used by the Soprano inference engine.
    ///      </remarks>        <short>    SIL, The Soprano Inference Language defines a set or URIs that  are used by the Soprano inference engine.</short>
    [SmokeClass("Soprano::Vocabulary::SIL")]
    public class Global {
        private static SmokeInvocation staticInterceptor = null;
        static Global() {
            staticInterceptor = new SmokeInvocation(typeof(Global), null);
        }
        /// <remarks>
        ///  The SIL namespace (http://soprano.org/sil#)
        ///          </remarks>        <short>    The SIL namespace (http://soprano.</short>
        public static QUrl SilNamespace() {
            return (QUrl) staticInterceptor.Invoke("silNamespace", "silNamespace()", typeof(QUrl));
        }
        /// <remarks>
        ///  URI of the named graph that contains all metadata about the inference graphs
        ///  such as their sourceStatements and their type (which is always INFERENCE_GRAPH).
        ///  (http://soprano.org/sil#InferenceMetaData)
        ///          </remarks>        <short>    URI of the named graph that contains all metadata about the inference graphs  such as their sourceStatements and their type (which is always INFERENCE_GRAPH).</short>
        public static QUrl InferenceMetaData() {
            return (QUrl) staticInterceptor.Invoke("InferenceMetaData", "InferenceMetaData()", typeof(QUrl));
        }
        /// <remarks>
        ///  inferenceGraph is a rdfs:Class that represents named graphs containing
        ///  infered triples.
        ///  (http://soprano.org/sil#InferenceGraph)
        ///          </remarks>        <short>    inferenceGraph is a rdfs:Class that represents named graphs containing  infered triples.</short>
        public static QUrl InferenceGraph() {
            return (QUrl) staticInterceptor.Invoke("InferenceGraph", "InferenceGraph()", typeof(QUrl));
        }
        /// <remarks>
        ///  Property that states which statement was used to infer the triples in one
        ///  inferenceGraph.
        ///  (http://soprano.org/sil#sourceStatement)
        ///          </remarks>        <short>    Property that states which statement was used to infer the triples in one  inferenceGraph.</short>
        public static QUrl SourceStatement() {
            return (QUrl) staticInterceptor.Invoke("sourceStatement", "sourceStatement()", typeof(QUrl));
        }
        /// <remarks>
        ///  Property as addition to rdf:subject, rdf:predicate, and rdf:object
        ///  to state the context of a statement.
        ///          </remarks>        <short>    Property as addition to rdf:subject, rdf:predicate, and rdf:object  to state the context of a statement.</short>
        public static QUrl Context() {
            return (QUrl) staticInterceptor.Invoke("context", "context()", typeof(QUrl));
        }
    }
}
