//Auto-generated by kalyptus. DO NOT EDIT.
namespace KNS {
    using Kimono;
    using System;
    using Qyoto;
    [SmokeClass("KNS")]
    public class Global {
        private static SmokeInvocation staticInterceptor = null;
        static Global() {
            staticInterceptor = new SmokeInvocation(typeof(Global), null);
        }
        /// <remarks>
        ///  @brief Standard action for all GHNS workflows.
        ///  This action can be used to add KNewStuff support to menus and toolbars.
        ///  </remarks>        <short>    @brief Standard action for all GHNS workflows.</short>
        public static KAction StandardAction(string what, QObject recvr, string slot, KActionCollection parent, string name) {
            return (KAction) staticInterceptor.Invoke("standardAction$#$#$", "standardAction(const QString&, const QObject*, const char*, KActionCollection*, const char*)", typeof(KAction), typeof(string), what, typeof(QObject), recvr, typeof(string), slot, typeof(KActionCollection), parent, typeof(string), name);
        }
        public static KAction StandardAction(string what, QObject recvr, string slot, KActionCollection parent) {
            return (KAction) staticInterceptor.Invoke("standardAction$#$#", "standardAction(const QString&, const QObject*, const char*, KActionCollection*)", typeof(KAction), typeof(string), what, typeof(QObject), recvr, typeof(string), slot, typeof(KActionCollection), parent);
        }
    }
}
