2008-08-03  Arno Rehn  <arno@arnorehn.de>

* Make use of KUrl.List in the KWrite example. This makes drag&drop work.

2008-07-31  Arno Rehn  <arno@arnorehn.de>

* KWrite example:
  Implement the IDisposable interface and do the cleanup there. The
  finalizer of KWrite is called too late by the GC - the underlying
  C++ instance has already been destroyed by then.

2008-07-30  Richard Dale  <richard.j.dale@gmail.com>

* When the KApplication for the kwrite example was created, it was assigned
  to a local variable 'a' in the Main() method. However, mono 1.2.4 garbage
  collected it before the Main() method was exited. It a static variable in
  the KWrite class is used, the problem goes away.

2008-07-26  Arno Rehn  <arno@arnorehn.de>

* Use qobject_cast in the KWrite example.

2008-07-26  Richard Dale  <richard.j.dale@gmail.com>

* Fix some issues with the KWrite example
    * SetXmlFile() was being given the wrong filename, which meant that the
      menus and menu option were in the wrong order
    * The Connect() to the close app slot was wrong
    * Fixed the loop to open files via their urls from the open file dialog
    * A KIO.NetAccess.Exists() call crashes and needed to be commented out
    * KCmdLineArgs parsing is borked, and the code to do that is skipped at
      at the moment
    * In Qyoto the CreateInstance() method doesn't work with nested classes
      as they are wrongly named. For instance, 
      Kimono.KEncodingFileDialog.Result should be passed as
      Kimono.KEncodingFileDialog+Result because nested classes have '+'s 
      rather than '.'s. So the start up code for a Qyoto module needs to use
      C# reflection to get each C# class and obtain the corresponding Smoke
      class and put them in the lookup map.
* Added some KTextEditor marshallers

2008-07-25  Richard Dale  <richard.j.dale@gmail.com>

* Add a port of the KWrite shell to C#
* There are some problems to be solved:
    * Accessing some functionality requires qobject_cast<>'s
    * How should mono KDE apps be installed? Should they be installed into
      the bin dir, or they should they be started from a C++ shell like Ruby
      KDE apps?
    * Couldn't see how to convert this call:
        QTextStream input(stdin, QIODevice::ReadOnly);
    * The KUrl.List class needs more work to be usuable with drag and drop
