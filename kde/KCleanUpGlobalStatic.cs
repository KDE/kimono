//Auto-generated by kalyptus. DO NOT EDIT.
namespace Kimono {
    using System;
    using Qyoto;
    /// <remarks>
    ///  Helper class for K_GLOBAL_STATIC to clean up the object on library unload or application
    ///  shutdown.
    ///  </remarks>        <short>   </short>
    [SmokeClass("KCleanUpGlobalStatic")]
    public class KCleanUpGlobalStatic : Object, IDisposable {
        protected SmokeInvocation interceptor = null;
        private IntPtr smokeObject;
        protected KCleanUpGlobalStatic(Type dummy) {}
        protected void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(KCleanUpGlobalStatic), this);
        }
        public KCleanUpGlobalStatic() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("KCleanUpGlobalStatic", "KCleanUpGlobalStatic()", typeof(void));
        }
        ~KCleanUpGlobalStatic() {
            interceptor.Invoke("~KCleanUpGlobalStatic", "~KCleanUpGlobalStatic()", typeof(void));
        }
        public void Dispose() {
            interceptor.Invoke("~KCleanUpGlobalStatic", "~KCleanUpGlobalStatic()", typeof(void));
        }
    }
}
