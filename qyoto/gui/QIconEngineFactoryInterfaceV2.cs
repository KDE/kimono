//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QIconEngineFactoryInterfaceV2")]
    public abstract class QIconEngineFactoryInterfaceV2 : QFactoryInterface {
        protected QIconEngineFactoryInterfaceV2(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QIconEngineFactoryInterfaceV2), this);
        }
        [SmokeMethod("create(const QString&)")]
        public abstract QIconEngineV2 Create(string filename);
        public QIconEngineFactoryInterfaceV2() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QIconEngineFactoryInterfaceV2", "QIconEngineFactoryInterfaceV2()", typeof(void));
        }
    }
}
