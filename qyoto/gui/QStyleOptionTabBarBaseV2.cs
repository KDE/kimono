//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QStyleOptionTabBarBaseV2")]
    public class QStyleOptionTabBarBaseV2 : QStyleOptionTabBarBase, IDisposable {
        protected QStyleOptionTabBarBaseV2(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QStyleOptionTabBarBaseV2), this);
        }
        public enum StyleOptionVersion {
            Version = 2,
        }
        public bool DocumentMode {
            get { return (bool) interceptor.Invoke("documentMode", "documentMode()", typeof(bool)); }
            set { interceptor.Invoke("setDocumentMode$", "setDocumentMode(bool)", typeof(void), typeof(bool), value); }
        }
        public QStyleOptionTabBarBaseV2() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStyleOptionTabBarBaseV2", "QStyleOptionTabBarBaseV2()", typeof(void));
        }
        public QStyleOptionTabBarBaseV2(QStyleOptionTabBarBaseV2 other) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStyleOptionTabBarBaseV2#", "QStyleOptionTabBarBaseV2(const QStyleOptionTabBarBaseV2&)", typeof(void), typeof(QStyleOptionTabBarBaseV2), other);
        }
        public QStyleOptionTabBarBaseV2(QStyleOptionTabBarBase other) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStyleOptionTabBarBaseV2#", "QStyleOptionTabBarBaseV2(const QStyleOptionTabBarBase&)", typeof(void), typeof(QStyleOptionTabBarBase), other);
        }
        public QStyleOptionTabBarBaseV2(int version) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStyleOptionTabBarBaseV2$", "QStyleOptionTabBarBaseV2(int)", typeof(void), typeof(int), version);
        }
        ~QStyleOptionTabBarBaseV2() {
            interceptor.Invoke("~QStyleOptionTabBarBaseV2", "~QStyleOptionTabBarBaseV2()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QStyleOptionTabBarBaseV2", "~QStyleOptionTabBarBaseV2()", typeof(void));
        }
    }
}
