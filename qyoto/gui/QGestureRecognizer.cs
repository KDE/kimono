//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QGestureRecognizer")]
    public abstract class QGestureRecognizer : Object {
        protected SmokeInvocation interceptor = null;
        private IntPtr smokeObject;
        protected QGestureRecognizer(Type dummy) {}
        protected void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QGestureRecognizer), this);
        }
        private static SmokeInvocation staticInterceptor = null;
        static QGestureRecognizer() {
            staticInterceptor = new SmokeInvocation(typeof(QGestureRecognizer), null);
        }
        public enum ResultFlag {
            Ignore = 0x0001,
            MayBeGesture = 0x0002,
            TriggerGesture = 0x0004,
            FinishGesture = 0x0008,
            CancelGesture = 0x0010,
            ResultState_Mask = 0x00ff,
            ConsumeEventHint = 0x0100,
            ResultHint_Mask = 0xff00,
        }
        public QGestureRecognizer() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QGestureRecognizer", "QGestureRecognizer()", typeof(void));
        }
        [SmokeMethod("create(QObject*)")]
        public virtual QGesture Create(QObject target) {
            return (QGesture) interceptor.Invoke("create#", "create(QObject*)", typeof(QGesture), typeof(QObject), target);
        }
        [SmokeMethod("recognize(QGesture*, QObject*, QEvent*)")]
        public abstract uint Recognize(QGesture state, QObject watched, QEvent arg3);
        [SmokeMethod("reset(QGesture*)")]
        public virtual void Reset(QGesture state) {
            interceptor.Invoke("reset#", "reset(QGesture*)", typeof(void), typeof(QGesture), state);
        }
        public static Qt.GestureType RegisterRecognizer(QGestureRecognizer recognizer) {
            return (Qt.GestureType) staticInterceptor.Invoke("registerRecognizer#", "registerRecognizer(QGestureRecognizer*)", typeof(Qt.GestureType), typeof(QGestureRecognizer), recognizer);
        }
        public static void UnregisterRecognizer(Qt.GestureType type) {
            staticInterceptor.Invoke("unregisterRecognizer$", "unregisterRecognizer(Qt::GestureType)", typeof(void), typeof(Qt.GestureType), type);
        }
    }
}
