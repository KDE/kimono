//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QImageIOHandlerFactoryInterface")]
    public abstract class QImageIOHandlerFactoryInterface : QFactoryInterface {
        protected QImageIOHandlerFactoryInterface(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QImageIOHandlerFactoryInterface), this);
        }
        [SmokeMethod("create(QIODevice*, const QByteArray&) const")]
        public abstract QImageIOHandler Create(QIODevice device, QByteArray format);
        public QImageIOHandlerFactoryInterface() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QImageIOHandlerFactoryInterface", "QImageIOHandlerFactoryInterface()", typeof(void));
        }
    }
}
