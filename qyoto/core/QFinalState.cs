//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QFinalState")]
    public class QFinalState : QAbstractState, IDisposable {
        protected QFinalState(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QFinalState), this);
        }
        private static SmokeInvocation staticInterceptor = null;
        static QFinalState() {
            staticInterceptor = new SmokeInvocation(typeof(QFinalState), null);
        }
        public QFinalState(QState parent) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QFinalState#", "QFinalState(QState*)", typeof(void), typeof(QState), parent);
        }
        public QFinalState() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QFinalState", "QFinalState()", typeof(void));
        }
        [SmokeMethod("onEntry(QEvent*)")]
        protected override void OnEntry(QEvent arg1) {
            interceptor.Invoke("onEntry#", "onEntry(QEvent*)", typeof(void), typeof(QEvent), arg1);
        }
        [SmokeMethod("onExit(QEvent*)")]
        protected override void OnExit(QEvent arg1) {
            interceptor.Invoke("onExit#", "onExit(QEvent*)", typeof(void), typeof(QEvent), arg1);
        }
        [SmokeMethod("event(QEvent*)")]
        protected override bool Event(QEvent e) {
            return (bool) interceptor.Invoke("event#", "event(QEvent*)", typeof(bool), typeof(QEvent), e);
        }
        ~QFinalState() {
            interceptor.Invoke("~QFinalState", "~QFinalState()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QFinalState", "~QFinalState()", typeof(void));
        }
        public static new string Tr(string s, string c) {
            return (string) staticInterceptor.Invoke("tr$$", "tr(const char*, const char*)", typeof(string), typeof(string), s, typeof(string), c);
        }
        public static new string Tr(string s) {
            return (string) staticInterceptor.Invoke("tr$", "tr(const char*)", typeof(string), typeof(string), s);
        }
        protected new IQFinalStateSignals Emit {
            get { return (IQFinalStateSignals) Q_EMIT; }
        }
    }

    public interface IQFinalStateSignals : IQAbstractStateSignals {
    }
}
