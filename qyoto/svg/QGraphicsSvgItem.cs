//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QGraphicsSvgItem")]
    public class QGraphicsSvgItem : QGraphicsObject, IDisposable {
        protected QGraphicsSvgItem(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QGraphicsSvgItem), this);
        }
        private static SmokeInvocation staticInterceptor = null;
        static QGraphicsSvgItem() {
            staticInterceptor = new SmokeInvocation(typeof(QGraphicsSvgItem), null);
        }
        public const int Type = 13;
        [Q_PROPERTY("QString", "elementId")]
        public string ElementId {
            get { return (string) interceptor.Invoke("elementId", "elementId()", typeof(string)); }
            set { interceptor.Invoke("setElementId$", "setElementId(QString)", typeof(void), typeof(string), value); }
        }
        [Q_PROPERTY("QSize", "maximumCacheSize")]
        public QSize MaximumCacheSize {
            get { return (QSize) interceptor.Invoke("maximumCacheSize", "maximumCacheSize()", typeof(QSize)); }
            set { interceptor.Invoke("setMaximumCacheSize#", "setMaximumCacheSize(QSize)", typeof(void), typeof(QSize), value); }
        }
        public QGraphicsSvgItem(IQGraphicsItem parentItem) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QGraphicsSvgItem#", "QGraphicsSvgItem(QGraphicsItem*)", typeof(void), typeof(IQGraphicsItem), parentItem);
        }
        public QGraphicsSvgItem() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QGraphicsSvgItem", "QGraphicsSvgItem()", typeof(void));
        }
        public QGraphicsSvgItem(string fileName, IQGraphicsItem parentItem) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QGraphicsSvgItem$#", "QGraphicsSvgItem(const QString&, QGraphicsItem*)", typeof(void), typeof(string), fileName, typeof(IQGraphicsItem), parentItem);
        }
        public QGraphicsSvgItem(string fileName) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QGraphicsSvgItem$", "QGraphicsSvgItem(const QString&)", typeof(void), typeof(string), fileName);
        }
        public void SetSharedRenderer(QSvgRenderer renderer) {
            interceptor.Invoke("setSharedRenderer#", "setSharedRenderer(QSvgRenderer*)", typeof(void), typeof(QSvgRenderer), renderer);
        }
        public QSvgRenderer Renderer() {
            return (QSvgRenderer) interceptor.Invoke("renderer", "renderer() const", typeof(QSvgRenderer));
        }
        public void SetCachingEnabled(bool arg1) {
            interceptor.Invoke("setCachingEnabled$", "setCachingEnabled(bool)", typeof(void), typeof(bool), arg1);
        }
        public bool IsCachingEnabled() {
            return (bool) interceptor.Invoke("isCachingEnabled", "isCachingEnabled() const", typeof(bool));
        }
        // [SmokeMethod("boundingRect() const")]
        // public override QRectF BoundingRect() {
        //    return (QRectF) interceptor.Invoke("boundingRect", "boundingRect() const", typeof(QRectF));
        // }
        // [SmokeMethod("paint(QPainter*, const QStyleOptionGraphicsItem*, QWidget*)")]
        // public override void Paint(QPainter painter, QStyleOptionGraphicsItem option, QWidget widget) {
        //     interceptor.Invoke("paint###", "paint(QPainter*, const QStyleOptionGraphicsItem*, QWidget*)", typeof(void), typeof(QPainter), painter, typeof(QStyleOptionGraphicsItem), option, typeof(QWidget), widget);
        // }
        [SmokeMethod("paint(QPainter*, const QStyleOptionGraphicsItem*)")]
        public virtual void Paint(QPainter painter, QStyleOptionGraphicsItem option) {
            interceptor.Invoke("paint##", "paint(QPainter*, const QStyleOptionGraphicsItem*)", typeof(void), typeof(QPainter), painter, typeof(QStyleOptionGraphicsItem), option);
        }
        [SmokeMethod("type() const")]
        public override int type() {
            return (int) interceptor.Invoke("type", "type() const", typeof(int));
        }
        ~QGraphicsSvgItem() {
            interceptor.Invoke("~QGraphicsSvgItem", "~QGraphicsSvgItem()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QGraphicsSvgItem", "~QGraphicsSvgItem()", typeof(void));
        }
        public static new string Tr(string s, string c) {
            return (string) staticInterceptor.Invoke("tr$$", "tr(const char*, const char*)", typeof(string), typeof(string), s, typeof(string), c);
        }
        public static new string Tr(string s) {
            return (string) staticInterceptor.Invoke("tr$", "tr(const char*)", typeof(string), typeof(string), s);
        }
        protected new IQGraphicsSvgItemSignals Emit {
            get { return (IQGraphicsSvgItemSignals) Q_EMIT; }
        }
    }

    public interface IQGraphicsSvgItemSignals : IQGraphicsObjectSignals {
    }
}
