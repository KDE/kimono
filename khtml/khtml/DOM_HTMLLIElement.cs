//Auto-generated by kalyptus. DO NOT EDIT.
namespace DOM {
	using Kimono;
	using System;
	using Qyoto;
	/// <remarks>
	///  List item. See the <a
	///  href="http://www.w3.org/TR/REC-html40/struct/lists.html#edef-LI">
	///  LI element definition </a> in HTML 4.0.
	///  </remarks>		<short>    List item.</short>
	[SmokeClass("DOM::HTMLLIElement")]
	public class HTMLLIElement : DOM.HTMLElement, IDisposable {
 		protected HTMLLIElement(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(HTMLLIElement), this);
		}
		// DOM::HTMLLIElement* HTMLLIElement(DOM::HTMLLIElementImpl* arg1); >>>> NOT CONVERTED
		public HTMLLIElement() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("HTMLLIElement", "HTMLLIElement()", typeof(void));
		}
		public HTMLLIElement(DOM.HTMLLIElement other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("HTMLLIElement#", "HTMLLIElement(const DOM::HTMLLIElement&)", typeof(void), typeof(DOM.HTMLLIElement), other);
		}
		public HTMLLIElement(DOM.Node other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("HTMLLIElement#", "HTMLLIElement(const DOM::Node&)", typeof(void), typeof(DOM.Node), other);
		}
		/// <remarks>
		///  List item bullet style. See the <a
		///  href="http://www.w3.org/TR/REC-html40/struct/lists.html#adef-type-LI">
		///  type attribute definition </a> in HTML 4.0. This attribute is
		///  deprecated in HTML 4.0.
		///      </remarks>		<short>    List item bullet style.</short>
		public DOM.DOMString type() {
			return (DOM.DOMString) interceptor.Invoke("type", "type() const", typeof(DOM.DOMString));
		}
		/// <remarks>
		///  see type
		///      </remarks>		<short>    see type      </short>
		public void SetType(DOM.DOMString arg1) {
			interceptor.Invoke("setType#", "setType(const DOM::DOMString&)", typeof(void), typeof(DOM.DOMString), arg1);
		}
		/// <remarks>
		///  Reset sequence number when used in <code>OL</code> See the <a
		///  href="http://www.w3.org/TR/REC-html40/struct/lists.html#adef-value-LI">
		///  value attribute definition </a> in HTML 4.0. This attribute is
		///  deprecated in HTML 4.0.
		///      </remarks>		<short>    Reset sequence number when used in <code>OL</code> See the <a  href="http://www.</short>
		public long Value() {
			return (long) interceptor.Invoke("value", "value() const", typeof(long));
		}
		/// <remarks>
		///  see value
		///      </remarks>		<short>    see value      </short>
		public void SetValue(long arg1) {
			interceptor.Invoke("setValue$", "setValue(long)", typeof(void), typeof(long), arg1);
		}
		~HTMLLIElement() {
			interceptor.Invoke("~HTMLLIElement", "~HTMLLIElement()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~HTMLLIElement", "~HTMLLIElement()", typeof(void));
		}
	}
}
