//Auto-generated by kalyptus. DO NOT EDIT.
namespace DOM {
	using Kimono;
	using System;
	using Qyoto;
	/// <remarks>
	///  This element is used for single-line text input. See the <a
	///  href="http://www.w3.org/TR/REC-html40/interact/forms.html#edef-ISINDEX">
	///  ISINDEX element definition </a> in HTML 4.0. This element is
	///  deprecated in HTML 4.0.
	///  </remarks>		<short>    This element is used for single-line text input.</short>
	[SmokeClass("DOM::HTMLIsIndexElement")]
	public class HTMLIsIndexElement : DOM.HTMLElement, IDisposable {
 		protected HTMLIsIndexElement(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(HTMLIsIndexElement), this);
		}
		// DOM::HTMLIsIndexElement* HTMLIsIndexElement(DOM::HTMLIsIndexElementImpl* arg1); >>>> NOT CONVERTED
		public HTMLIsIndexElement() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("HTMLIsIndexElement", "HTMLIsIndexElement()", typeof(void));
		}
		public HTMLIsIndexElement(DOM.HTMLIsIndexElement other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("HTMLIsIndexElement#", "HTMLIsIndexElement(const DOM::HTMLIsIndexElement&)", typeof(void), typeof(DOM.HTMLIsIndexElement), other);
		}
		public HTMLIsIndexElement(DOM.Node other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("HTMLIsIndexElement#", "HTMLIsIndexElement(const DOM::Node&)", typeof(void), typeof(DOM.Node), other);
		}
		/// <remarks>
		///  ### KDE 4.0: remove
		///      </remarks>		<short>    ### KDE 4.</short>
		public new DOM.HTMLFormElement Form() {
			return (DOM.HTMLFormElement) interceptor.Invoke("form", "form() const", typeof(DOM.HTMLFormElement));
		}
		/// <remarks>
		///  The prompt message. See the <a
		///  href="http://www.w3.org/TR/REC-html40/interact/forms.html#adef-prompt">
		///  prompt attribute definition </a> in HTML 4.0. This attribute is
		///  deprecated in HTML 4.0.
		///      </remarks>		<short>    The prompt message.</short>
		public DOM.DOMString Prompt() {
			return (DOM.DOMString) interceptor.Invoke("prompt", "prompt() const", typeof(DOM.DOMString));
		}
		/// <remarks>
		///  see prompt
		///      </remarks>		<short>    see prompt      </short>
		public void SetPrompt(DOM.DOMString arg1) {
			interceptor.Invoke("setPrompt#", "setPrompt(const DOM::DOMString&)", typeof(void), typeof(DOM.DOMString), arg1);
		}
		~HTMLIsIndexElement() {
			interceptor.Invoke("~HTMLIsIndexElement", "~HTMLIsIndexElement()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~HTMLIsIndexElement", "~HTMLIsIndexElement()", typeof(void));
		}
	}
}
