//Auto-generated by kalyptus. DO NOT EDIT.
namespace DOM {
	using Kimono;
	using System;
	using Qyoto;
	/// <remarks>
	///  The <code>CSSStyleRule</code> interface represents a single <a
	///  href="http://www.w3.org/TR/REC-CSS2/syndata.html#q8"> rule set </a>
	///  in a CSS style sheet.
	///  </remarks>		<short>    The <code>CSSStyleRule</code> interface represents a single <a  href="http://www.</short>
	[SmokeClass("DOM::CSSStyleRule")]
	public class CSSStyleRule : DOM.CSSRule, IDisposable {
 		protected CSSStyleRule(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(CSSStyleRule), this);
		}
		// DOM::CSSStyleRule* CSSStyleRule(DOM::CSSStyleRuleImpl* arg1); >>>> NOT CONVERTED
		public CSSStyleRule() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("CSSStyleRule", "CSSStyleRule()", typeof(void));
		}
		public CSSStyleRule(DOM.CSSStyleRule other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("CSSStyleRule#", "CSSStyleRule(const DOM::CSSStyleRule&)", typeof(void), typeof(DOM.CSSStyleRule), other);
		}
		public CSSStyleRule(DOM.CSSRule other) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("CSSStyleRule#", "CSSStyleRule(const DOM::CSSRule&)", typeof(void), typeof(DOM.CSSRule), other);
		}
		/// <remarks>
		///  The textual representation of the <a
		///  href="http://www.w3.org/TR/REC-CSS2/selector.html"> selector
		///  </a> for the rule set. The implementation may have stripped out
		///  insignificant whitespace while parsing the selector.
		///      </remarks>		<short>    The textual representation of the <a  href="http://www.</short>
		public DOM.DOMString SelectorText() {
			return (DOM.DOMString) interceptor.Invoke("selectorText", "selectorText() const", typeof(DOM.DOMString));
		}
		/// <remarks>
		///  see selectorText
		///      </remarks>		<short>    see selectorText </short>
		public void SetSelectorText(DOM.DOMString arg1) {
			interceptor.Invoke("setSelectorText#", "setSelectorText(const DOM::DOMString&)", typeof(void), typeof(DOM.DOMString), arg1);
		}
		/// <remarks>
		///  The <a href="http://www.w3.org/TR/REC-CSS2/syndata.html#q8">
		///  declaration-block </a> of this rule set.
		///      </remarks>		<short>    The <a href="http://www.</short>
		public DOM.CSSStyleDeclaration Style() {
			return (DOM.CSSStyleDeclaration) interceptor.Invoke("style", "style() const", typeof(DOM.CSSStyleDeclaration));
		}
		~CSSStyleRule() {
			interceptor.Invoke("~CSSStyleRule", "~CSSStyleRule()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~CSSStyleRule", "~CSSStyleRule()", typeof(void));
		}
	}
}
