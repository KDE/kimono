//Auto-generated by kalyptus. DO NOT EDIT.
namespace Kimono {
    using System;
    using Qyoto;
    /// <remarks>
    ///  A container widget which arranges its children vertically.
    ///  When using a KVBox you don't need to create a layout nor
    ///  to add the child widgets to it.
    /// </remarks>        <short>    A container widget which arranges its children vertically.</short>
    ///         <see> KHBox</see>
    [SmokeClass("KVBox")]
    public class KVBox : KHBox, IDisposable {
        protected KVBox(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(KVBox), this);
        }
        /// <remarks>
        ///  Creates a new vbox.
        /// <param> name="parent" The parent widget.
        ///      </param></remarks>        <short>    Creates a new vbox.</short>
        public KVBox(QWidget parent) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("KVBox#", "KVBox(QWidget*)", typeof(void), typeof(QWidget), parent);
        }
        public KVBox() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("KVBox", "KVBox()", typeof(void));
        }
        ~KVBox() {
            interceptor.Invoke("~KVBox", "~KVBox()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~KVBox", "~KVBox()", typeof(void));
        }
        protected new IKVBoxSignals Emit {
            get { return (IKVBoxSignals) Q_EMIT; }
        }
    }

    public interface IKVBoxSignals : IKHBoxSignals {
    }
}
