//Auto-generated by kalyptus. DO NOT EDIT.
namespace KIO {
    using Kimono;
    using System;
    using Qyoto;
    /// <remarks>
    ///  A MimetypeJob is a TransferJob that  allows you to get
    ///  the mime type of an URL. Don't create directly,
    ///  but use KIO.Mimetype() instead.
    /// </remarks>        <short>    A MimetypeJob is a TransferJob that  allows you to get  the mime type of an URL.</short>
    ///         <see> mimetype</see>
    [SmokeClass("KIO::MimetypeJob")]
    public class MimetypeJob : KIO.TransferJob, IDisposable {
        protected MimetypeJob(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(MimetypeJob), this);
        }
        // KIO::MimetypeJob* MimetypeJob(KIO::MimetypeJobPrivate& arg1); >>>> NOT CONVERTED
        [Q_SLOT("void slotFinished()")]
        [SmokeMethod("slotFinished()")]
        protected override void SlotFinished() {
            interceptor.Invoke("slotFinished", "slotFinished()", typeof(void));
        }
        ~MimetypeJob() {
            interceptor.Invoke("~MimetypeJob", "~MimetypeJob()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~MimetypeJob", "~MimetypeJob()", typeof(void));
        }
        protected new IMimetypeJobSignals Emit {
            get { return (IMimetypeJobSignals) Q_EMIT; }
        }
    }

    public interface IMimetypeJobSignals : KIO.ITransferJobSignals {
    }
}
