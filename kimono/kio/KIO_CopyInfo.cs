//Auto-generated by kalyptus. DO NOT EDIT.
namespace KIO {
    using Kimono;
    using System;
    using Qyoto;
    [SmokeClass("KIO::CopyInfo")]
    public class CopyInfo : Object, IDisposable {
        protected SmokeInvocation interceptor = null;
        private IntPtr smokeObject;
        protected CopyInfo(Type dummy) {}
        protected void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(CopyInfo), this);
        }
        public CopyInfo() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("CopyInfo", "CopyInfo()", typeof(void));
        }
        ~CopyInfo() {
            interceptor.Invoke("~CopyInfo", "~CopyInfo()", typeof(void));
        }
        public void Dispose() {
            interceptor.Invoke("~CopyInfo", "~CopyInfo()", typeof(void));
        }
    }
}
