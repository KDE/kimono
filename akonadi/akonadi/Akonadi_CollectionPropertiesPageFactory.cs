//Auto-generated by kalyptus. DO NOT EDIT.
namespace Akonadi {
    using Kimono;
    using System;
    using Qyoto;
    /// <remarks>
    ///  The factory encapsulates the creation of the collection properties
    ///  dialog page.
    ///  You can use the AKONADI_COLLECTION_PROPERTIES_PAGE_FACTORY macro
    ///  to create a factory class automatically.
    /// </remarks>        <author> Volker Krause <vkrause@kde.org>
    ///  </author>
    ///         <short> A factory class for collection properties dialog pages. </short>
    [SmokeClass("Akonadi::CollectionPropertiesPageFactory")]
    public abstract class CollectionPropertiesPageFactory : Object {
        protected SmokeInvocation interceptor = null;
        private IntPtr smokeObject;
        protected CollectionPropertiesPageFactory(Type dummy) {}
        protected void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(CollectionPropertiesPageFactory), this);
        }
        /// <remarks>
        ///  Returns the actual page widget.
        /// <param> name="parent" The parent widget.
        ///      </param></remarks>        <short>    Returns the actual page widget.</short>
        [SmokeMethod("createWidget(QWidget*) const")]
        public abstract Akonadi.CollectionPropertiesPage CreateWidget(QWidget parent);
        public CollectionPropertiesPageFactory() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("CollectionPropertiesPageFactory", "CollectionPropertiesPageFactory()", typeof(void));
        }
    }
}
